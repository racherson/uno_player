(in-microtheory UnoPlayer)


;;;;;;;;;;;;;;;;;;;;;;;;;;; Planning ;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;; opponent drew card

;; usage: (opponentDrewCard ?opponent ?quantity)

;;if 1 card was drawn, it means they couldn't play with their hand
(preconditionForMethod
    (and
        (equals ?quantity 1))
    (methodForAction
        (opponentDrewCard ?opponent ?quantity)
        (actionSequence
            (TheList
                ;; update quantity of cards
                (doAgentPlan
                    (UpdateColorPreferences ?opponent)
                    (UpdateOpponentHandSize ?opponent ?quantity))))))

;;if 2 or more cards were drawn, they got a draw +2 or +4
(preconditionForMethod
    (and
        (greaterThan ?quantity 1))
    (methodForAction
        (opponentDrewCard ?opponent ?quantity)
        (actionSequence
            (TheList
                (doAgentPlan
                    ()
                    ())))))


;; opponent drew and played

;; self drew card

;; opponent played card

;; self played card

;; ------------------------------------------------------------
;; -------------------- Update Color Preferences --------------
;; ------------------------------------------------------------

(preconditionForMethod
    (and
       	(getTopCardFn ?topCard)
        (isa ?topCard RedPlayingCard))
    (methodForAction
        (UpdateColorPreferences ?opponent)
        (actionSequence
            (TheList
            	(doForget (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard ?pref)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard unoAvoid)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard unoNeutral)))))))

(preconditionForMethod
    (and
    	  (getTopCardFn ?topCard)
        (isa ?topCard BluePlayingCard))
    (methodForAction
        (UpdateColorPreferences ?opponent)
        (actionSequence
            (TheList
            	(doForget (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard ?pref)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard unoAvoid)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard unoNeutral)))))))


(preconditionForMethod
    (and
   		  (getTopCardFn ?topCard)
        (isa ?topCard GreenPlayingCard))
    (methodForAction
        (UpdateColorPreferences ?opponent)
        (actionSequence
            (TheList
            	(doForget (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard ?pref)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard unoAvoid)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard unoNeutral)))))))

(preconditionForMethod
    (and
    		(getTopCardFn ?topCard)
        (isa ?topCard YellowPlayingCard))
    (methodForAction
        (UpdateColorPreferences ?opponent)
        (actionSequence
            (TheList
            	(doForget (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard ?pref)))
              (doForget (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard ?pref)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent RedPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent BluePlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent GreenPlayingCard unoNeutral)))
              (doRecord (ist-Information UnoPlayer (colorPreference ?opponent YellowPlayingCard unoAvoid)))))))


;; ------------------------------------------------------------
;; -------------------- Update Opponent Hand Size --------------
;; ------------------------------------------------------------

(preconditionForMethod
    (and
       	(true))
    (methodForAction
        (UpdateOpponentHandSize ?opponent ?quantity)
        (actionSequence
            (TheList
            	(doForget (ist-Information UnoPlayer (opponentHandSize ?opponent ?currentSize)))
              (doRecord (ist-Information UnoPlayer (opponentHandSize ?opponent (plusFn ?quantity ?currentSize))))))))
