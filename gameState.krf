;; Game state information (e.g. close to end of game, player turn direction)

(in-microtheory UnoPlayer)


;; ------------------------------------------------------------
;; -------------------- End vs Early Game ---------------------
;; ------------------------------------------------------------

(<== (endGame true)
    (and 
        (evaluate ?quantitiesList
            (TheClosedRetrievalSetOf ?num
            (opponentHandSize ?opponent ?num)))
        (evaluate ?minQuantity (MinimumFn ?quantitiesList IdentityFn))
    (lessThan ?minQuantity 3)))



;; ------------------------------------------------------------
;; -------------------- Player Turn Direction -----------------
;; ------------------------------------------------------------

(isa UnoDirection ClarifyingCollectionType)
(genls UnoDirection ExistingObjectType)
(comment UnoDirection "Collection of directions turns may follow for players in Uno")

(isa unoClockwise UnoDirection)
(comment unoClockwise "Player turns flow clockwise, meaning self -> opponent 1 -> opponent 2 -> opponent3")

(isa unoCounterClockwise UnoDirection)
(comment unoCounterClockwise "Player turns flow counter clockwise, meaning opponent 3 -> opponent 2 -> opponent1 -> self")

; usage: (getDirection ?dir)
; returns an uno direction (e.g. unoClockwise)
(getDirection unoClockwise)



; track top card
; usage: (getTopCard ?topCard)
; returns a card entity (e.g. red7)




;; ------------------------------------------------------------
;; -------------------- Pending Card Draw ---------------------
;; ------------------------------------------------------------

;; relation connecting number value to number of cards to draw
(isa numberCardsToDraw BinaryPredicate)
(genlPreds numberCardsToDraw number)  
(arity numberCardsToDraw 2)
(arg1Isa numberCardsToDraw Number)
(arg2Isa numberCardsToDraw ScalarInterval)
(comment numberCardsToDraw "A relation stating how many cards need to be drawn at a given point in the game")

;; entity representing the number of cards the current player must draw
(isa cardsToDraw Number)
(comment cardsToDraw "Number of cards the current player needs to draw, unless there is a special play")
(numberCardsToDraw cardsToDraw 0)