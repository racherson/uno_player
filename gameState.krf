;; Game state information (e.g. close to end of game, player turn direction)

(in-microtheory UnoPlayer)


;; ------------------------------------------------------------
;; -------------------- End vs Early Game ---------------------
;; ------------------------------------------------------------

(<== (endGame true)
    (and 
        (evaluate ?quantitiesList
            (TheClosedRetrievalSetOf ?num
            (opponentHandSize ?opponent ?num)))
        (evaluate ?minQuantity (MinimumFn ?quantitiesList IdentityFn))
    (lessThan ?minQuantity 3)))



# TODO direction


;; ------------------------------------------------------------
;; -------------------- Pending Card Draw ---------------------
;; ------------------------------------------------------------

;; relation connecting number value to number of cards to draw
(isa numberCardsToDraw BinaryPredicate)
(genlPreds numberCardsToDraw number)  
(arity numberCardsToDraw 2)
(arg1Isa numberCardsToDraw Number)
(arg2Isa numberCardsToDraw ScalarInterval)
(comment numberCardsToDraw "A relation stating how many cards need to be drawn at a given point in the game")

;; entity representing the number of cards the current player must draw
(isa cardsToDraw Number)
(comment cardsToDraw "Number of cards the current player needs to draw, unless there is a special play")
(numberCardsToDraw cardsToDraw 0)